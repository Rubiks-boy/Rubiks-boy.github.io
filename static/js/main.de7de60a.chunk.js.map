{"version":3,"sources":["components/Header.tsx","constants.tsx","components/FadeTimeout.tsx","projects.ts","components/Projects.tsx","Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","heroContent","backgroundColor","palette","background","default","padding","spacing","heroButtons","marginTop","components","breakpoints","down","textAlign","justifyContent","up","Album","classes","className","Container","maxWidth","Grid","container","item","key","xs","sm","md","Typography","component","variant","color","gutterBottom","paragraph","to","target","Button","url","FadeTimeout","props","setFadeIn","setState","fadeIn","performFadeIn","delay","Promise","setTimeout","state","this","children","Fade","in","timeout","React","Component","projects","name","desc","image","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","paper","Projects","map","i","Card","CardMedia","title","CardContent","CardActions","size","socialIcons","socialIcon","width","Copyright","align","Link","href","Date","getFullYear","Footer","style","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","type","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de7de60a.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RESUME_PATH } from \"../constants\";\nimport { SocialIcon } from \"react-social-icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(12, 0, 9),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  components: {\n    [theme.breakpoints.down(\"sm\")]: {\n      textAlign: \"center\",\n      justifyContent: \"center\",\n    },\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Album() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Grid container spacing={4}>\n            <Grid item key={1} xs={12} sm={12} md={6}>\n              <Typography\n                className={classes.components}\n                component=\"h1\"\n                variant=\"h2\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Adam Walker\n              </Typography>\n              <Typography\n                className={classes.components}\n                variant=\"h5\"\n                color=\"textSecondary\"\n                paragraph\n              >\n                I will come up with something to put here.\n              </Typography>\n              <div className={classes.heroButtons}>\n                <Grid container spacing={2} className={classes.components}>\n                  <Grid item>\n                    <Link to={RESUME_PATH} target=\"_blank\">\n                      <Button variant=\"contained\" color=\"primary\">\n                        Download Resume\n                      </Button>\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      Secondary action\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n              <div className={classes.heroButtons}>\n                <Grid container spacing={1} className={classes.components}>\n                  <Grid item>\n                    <SocialIcon url=\"https://github.com/Rubiks-boy\" />\n                  </Grid>\n                  <Grid item>\n                    <SocialIcon url=\"https://www.facebook.com/adamwalker567123/\" />\n                  </Grid>\n                  <Grid item>\n                    <SocialIcon url=\"https://www.linkedin.com/in/adam-walker-hmc/\" />\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n            <Grid item key={2} xs={12} sm={6} md={4}></Grid>\n          </Grid>\n        </Container>\n      </div>\n    </>\n  );\n}\n","export const FADEIN_TIMEOUT = 1500;\nexport const FADEIN_SEPARATION = 5000;\n\nexport const RESUME_PATH = \"/Resume.pdf\";\n","import React from \"react\";\nimport { Fade } from \"@material-ui/core\";\nimport { FADEIN_TIMEOUT } from \"../constants\";\n\nexport interface Props {\n  children: React.ReactElement;\n  delay: number;\n}\n\nexport interface State {\n  fadeIn: boolean;\n}\n\nexport default class FadeTimeout extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      fadeIn: false,\n    };\n  }\n\n  componentDidMount() {\n    this.performFadeIn(this.setFadeIn);\n  }\n\n  setFadeIn = () => {\n    this.setState({\n      fadeIn: true,\n    });\n  };\n\n  performFadeIn = (setFadeIn: () => void) => {\n    const { delay } = this.props;\n    return new Promise(() => {\n      setTimeout(() => {\n        setFadeIn();\n      }, delay);\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    const { fadeIn } = this.state;\n\n    return (\n      <Fade in={fadeIn} timeout={FADEIN_TIMEOUT}>\n        {children}\n      </Fade>\n    );\n  }\n}\n","export const projects = [\n  {\n    name: \"iPod Mods\",\n    desc: \"Bluetooth modded a click wheel iPod classic\",\n    image: \"https://source.unsplash.com/random\",\n  },\n  {\n    name: \"6502 8-bit Computer\",\n    desc:\n      \"Based on Ben Eater's 6502 computer design, build and programmed the 8-bit computer.\",\n    image: \"https://source.unsplash.com/random\",\n  },\n  {\n    name: \"Bowling Pinsetter\",\n    desc:\n      \" 3D modeled and printed a semi-automatic bowling pinsetter. Sold full java-based scoring system with GUI, Arduino-based triggering device & image processing to identify standing pins.\",\n    image: \"https://source.unsplash.com/random\",\n  },\n  {\n    name: \"Intel ISEF\",\n    desc:\n      \"3D modeled/printed & programmed white cane add-on for visually impaired. Won first place in engineering category at UNLV Regional Fair & invited to International Fair. \",\n    image: \"https://source.unsplash.com/random\",\n  },\n];\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport FadeTimeout from \"./FadeTimeout\";\nimport { FADEIN_SEPARATION } from \"../constants\";\nimport { projects } from \"../projects\";\n\ninterface ProjectCard {\n  name: string;\n  desc: string;\n  image: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    backgroundColor: theme.palette.background.default,\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Projects() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.cardGrid}>\n      <Container maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {projects.map((card: ProjectCard, i) => (\n            <Grid item key={i} xs={12} sm={6} md={4}>\n              <FadeTimeout delay={i * FADEIN_SEPARATION}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={card.image}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {card.name}\n                    </Typography>\n                    <Typography>{card.desc}</Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" variant=\"contained\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </FadeTimeout>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Typography, Link, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SocialIcon } from \"react-social-icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  socialIcons: {\n    justifyContent: \"center\",\n  },\n  socialIcon: {\n    width: \"30px\",\n  },\n}));\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" color=\"textPrimary\" gutterBottom>\n        Footer\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n      >\n        Something here to give the footer a purpose!\n      </Typography>\n      <div>\n        <Grid container spacing={1} className={classes.socialIcons}>\n          <Grid item>\n            <SocialIcon\n              url=\"https://github.com/Rubiks-boy\"\n              style={{\n                width: \"30px\",\n                height: \"30px\",\n                color: \"black\",\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <SocialIcon\n              url=\"https://www.facebook.com/adamwalker567123/\"\n              style={{ width: \"30px\", height: \"30px\" }}\n            />\n          </Grid>\n          <Grid item>\n            <SocialIcon\n              url=\"https://www.linkedin.com/in/adam-walker-hmc/\"\n              style={{ width: \"30px\", height: \"30px\" }}\n            />\n          </Grid>\n        </Grid>\n      </div>\n      <Copyright />\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Projects from \"./components/Projects\";\nimport Footer from \"./Footer\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <Route exact path=\"/\">\n            <Header />\n            <Projects />\n          </Route>\n          <Footer />\n        </ThemeProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}